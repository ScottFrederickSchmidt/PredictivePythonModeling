#DATA PREPROCESSING:
import pandas as pd
import matplitlb.pyplot as plt

df = pd.read_csv("health.csv")
x = df.iloc[:, :-1].values
y = df.iloc[:, 0].values

#ENCODE CATEGORITCAL VARIABLES
from sklearn.preprocessing import LabelEncoder

label_encoder_y = LabelEncoder()
y = label_encoder_y.fit_transform(y)

#SPLITTING:
from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y)test = train_test_split(x, y, test_size=0.25, random_state=0)

#Feature Scaling 
from sklearn.preprocessing import StandardScaler
sc_x = StandardScaler()
x_train = sc_x.fit_transform(x_train)
x_test = sc_x.transform(x_test)

####FEATURE SCALING:

#Prediction
pred1 = classifier.predict(x_test)

#Confusion Matrix:
from sklearn.metrics import confusion_matrixc
cm = confusion_matrix(y_test, pred1)

#TP = 118
#TN = 36
#TP = 26
#TN = 22
#Accurary = 0.8


### FIT MODE WITH STATSMODEL LIBRARY:
from sklearn.model_selection import train_test_split
x_train_s, x_test_s, y_train_s, y_test_s = train_test_split(x, y, test_size =0.25, 
random_state=0)

#Feature Scaling
from sklearn.preprocessing import StandardScaler
sc_x_s = StandardScaler()
x_train_s = sc_x_s.fit_transform(x_train_s)
x_test_s = sc_x_s.transform(x_test_s)

#Adding one extra column:
import statsmodel.api as sm
x_train_s = sm.add_constant(x_train_s)
x_test_s = sm.add_constant(x_test_s)

#LM Model:
import statsmodels.formula.api as smnf
classifier2=smf.Logit(endog = y_train_s, exog = x_train_s)
classifier2.summary()
#R-squared is 0.266


