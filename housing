import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

df = pd.read_csv(r"housing.csv")
head=df.head()

#CORRELATION PLOTS:
import seaborn as sns
sns.set(style='whitegrid', context='notebook')

cols= ["CRIM", "B", "INOUS", "NOX", "RM", "MEDV"]
sns.pairplot(df[cols], height=3.5)
plt.show()

#PLOTTING CORRELATIONS:
cm=np.corrcoef(df[cols].values.T)

sns.heatmap(data=cm, cbar=True, annot = True, square = True, annot_kws = {"size":15},
xticklabels=cols,
yticklabels=cols)

plt.show()


#SPLITTING DATASET:
x=dataset.iloc[:, :-1].values
y=dataset.iloc[:, 13].values

from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.3, random_state=0)

#MLR MODEL WITH SKLEARN AND PREDICTIONS:
from sklearn.linear_model import LinearRegression
regressor=LinearRegression()
regressor.fit(x_train, y_train)
regressor.coef_
regressor.intercept_
pred = regressor.predict(x_test)

from sklearn.metrics impprt mean_squared_error
from math import sqrt

rmse = sqrt(mean_squared_error(y_test, pred)

#MLR with STATSMODELS AND PREDICTIONS:
import statsmodels.api as sm
xs = sm.add_constant(x)

import statsmodel.formula.api as smf
regressor_ols = smf.OLD(endog = y_train, exog = x_train).fit


